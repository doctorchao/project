arr1.concat(arr2,arr3)数组拼接    es5
arr1=[...arr2,...arr3]           es6剩余参数 字符拓展

加!important 可覆盖住行内样式
第一步：
使用脚手架初始化一个项目文件  vue init webpack 项目名
00
本项目未装有sass
第二步：
安装一些开发过程中需要的依赖包
--save-dev (开发依赖最终不会加入项目代码)
npm install node-sass sass-loader --save-dev  (sass支持)
npm install normalize.css --save (安装初始化样式)
npm install axios --save (ajax库)
npm install moment --save(处理时间的库)
npm install mint-ui --save(ui库)
npm install amfe-flexible --save(淘宝设备适配方案)
npm install vue-awesome-swiper --save (基于swiper轮播图封装的vue组件)
npm install swiper --save (还的加个这个)
npm install showdown --save   (markdown转html)
npm install validator --save (格式判断)
npm install vuex --save (使用vuex存储用户数据)
npm install vuex-persistedstate --save ()

第三步：按需引入
npm install babel-plugin-component --save-dev(按需引入)
修改.babelrc中plugins

第四步
markdown转html   git:  showdown

能够模块化的东西一律模块化
组件上使用v-for 要 :key='index'

脱标 会造成一个div忽略另一个div所占空间

查看ip地址
windows ipconfig
mac ifconfig

webpack支持手机端查看修改config文件
host:'0.0.0.0'
router-link对象语法跳转 :to = {name:"",params:{id: }}

scoped 作用在当前模板组件 并不会作用到其他组件 以及 当前组件dom中加载出来的新元素

修改跨域 config/index 里的proxyTable,再config/prod.env里新增变量,然后utils/index里axios
npm run dev 是'/api' , npm run build 是'/'

果果小师弟
STM32F103C8T6

打包

把icon全部下载到本地 放入项目中 然后引入
把config中 index 里做修改 assetsPublicPath: './', // 加点，为打包的资源路径改为相对路径

HBuilder 打包工具 要注册




js预编译中 函数声明提升优先于变量声明提升 function a(){} 提升 var a=function(){} 不提升

基本数据类型是存在栈区，引用数据类型(对象，函数，数组)是存在堆区
声明基本数据类型时，每声明一个就会在栈区开辟一个新空间，即使声明内容一样
声明引用数据类型变量时 变量中存储的是数据所在的堆区的空间地址 因此一个数据可以对应多个变量
修改其中一个变量 数据变了 其它的变量也会跟着变了

var arr1 = [1,2,3]
var arr2 = arr1
arr2[0] = 7
console.log(arr1)
console.log(arr2)


形参不影响实参 所有语言通用

var a='123'
function demo(b){
    //var b = a
    b='456'
}
demo(a)
console.log(a)  //123

var arr1 =[1,2,3]
function demo(arr) {
    arr[1]=5
}
demo(arr1)
console.log(arr1) //[1,5,3]  地址没变 但是两者对应同一个空间 牵一发动全身

函数内部 不加var等声明的变量可以被外面引用 它是全局的
function a() {
    b=2
}
console.log(b) // 2

lsof -i:端口号 kill pid  结束端口进程


vue -webkit-box-orient: vertical webpack打包后被过滤掉了 线上没有这行代码
找到配置文件/build/webpack.prod.conf.js文件，注释掉一下代码
在打包后有的css不起作用 需要注释掉这些代码并在utils里加代码
在/build/utils.js文件里加上 minimize:true

或者加以下两个注释
/*! autoprefixer: off */
  -webkit-box-orient:vertical;
  /*! autoprefixer: on */
